/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Fri Oct  7 17:01:08 2016. */

#ifndef PB_MEASUREMENT_PB_H_INCLUDED
#define PB_MEASUREMENT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Measurement {
    bool has_temperature;
    float temperature;
    bool has_humidity;
    float humidity;
    pb_callback_t analog_readings;
/* @@protoc_insertion_point(struct:Measurement) */
} Measurement;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Measurement_init_default                 {false, 0, false, 0, {{NULL}, NULL}}
#define Measurement_init_zero                    {false, 0, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Measurement_temperature_tag              100
#define Measurement_humidity_tag                 101
#define Measurement_analog_readings_tag          110

/* Struct field encoding specification for nanopb */
extern const pb_field_t Measurement_fields[4];

/* Maximum encoded size of messages (where known) */
/* Measurement_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MEASUREMENT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
